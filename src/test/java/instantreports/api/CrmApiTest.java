/**
 * CPM API
 * Public API for CPM
 *
 * OpenAPI spec version: V1.0
 * Contact: info@addison.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package instantreports.api;

import instantreports.ApiException;
import instantreports.model.Companydata;
import instantreports.model.Contact;
import instantreports.model.Location;
import org.junit.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CrmApi
 */
public class CrmApiTest {

    private final CrmApi api = new CrmApi();

    
    /**
     * get: crm/firmendaten
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void crmCompanydataGetTest() throws ApiException {
        String authorization = null;
        String organization = null;
        String where = null;
        String order = null;
        String skip = null;
        String take = null;
        // Companydata response = api.crmCompanydataGet(authorization, organization, where, order, skip, take);

        // TODO: test validations
    }
    
    /**
     * get: crm/firmendaten/id
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void crmCompanydataResourceIdGetTest() throws ApiException {
        String authorization = null;
        String organization = null;
        String resourceId = null;
        // Companydata response = api.crmCompanydataResourceIdGet(authorization, organization, resourceId);

        // TODO: test validations
    }
    
    /**
     * put: crm/firmendaten
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void crmCompanydataResourceIdPutTest() throws ApiException {
        String authorization = null;
        String organization = null;
        String resourceId = null;
        Companydata body = null;
        // api.crmCompanydataResourceIdPut(authorization, organization, resourceId, body);

        // TODO: test validations
    }
    
    /**
     * get: crm/contact
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void crmContactGetTest() throws ApiException {
        String authorization = null;
        String organization = null;
        String where = null;
        String order = null;
        String skip = null;
        String take = null;
        // Contact response = api.crmContactGet(authorization, organization, where, order, skip, take);

        // TODO: test validations
    }
    
    /**
     * get: crm/contact/id
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void crmContactResourceIdGetTest() throws ApiException {
        String authorization = null;
        String organization = null;
        String resourceId = null;
        // Contact response = api.crmContactResourceIdGet(authorization, organization, resourceId);

        // TODO: test validations
    }
    
    /**
     * put: crm/contact
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void crmContactResourceIdPutTest() throws ApiException {
        String authorization = null;
        String organization = null;
        String resourceId = null;
        Contact body = null;
        // api.crmContactResourceIdPut(authorization, organization, resourceId, body);

        // TODO: test validations
    }
    
    /**
     * get: crm/location
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void crmLocationGetTest() throws ApiException {
        String authorization = null;
        String organization = null;
        String where = null;
        String order = null;
        String skip = null;
        String take = null;
        // Location response = api.crmLocationGet(authorization, organization, where, order, skip, take);

        // TODO: test validations
    }
    
    /**
     * get: crm/location/id
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void crmLocationResourceIdGetTest() throws ApiException {
        String authorization = null;
        String organization = null;
        String resourceId = null;
        // Location response = api.crmLocationResourceIdGet(authorization, organization, resourceId);

        // TODO: test validations
    }
    
    /**
     * put: crm/location
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void crmLocationResourceIdPutTest() throws ApiException {
        String authorization = null;
        String organization = null;
        String resourceId = null;
        Location body = null;
        // api.crmLocationResourceIdPut(authorization, organization, resourceId, body);

        // TODO: test validations
    }
    
    /**
     * post: crm/firmendaten
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void crmResourcePostTest() throws ApiException {
        String authorization = null;
        String organization = null;
        String resource = null;
        Companydata body = null;
        // api.crmResourcePost(authorization, organization, resource, body);

        // TODO: test validations
    }
    
}
